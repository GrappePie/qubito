<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/next.config.ts">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/next.config.ts" />
              <option name="originalContent" value="import type { NextConfig } from &quot;next&quot;;&#10;&#10;const nextConfig: NextConfig = {&#10;  /* config options here */&#10;};&#10;&#10;export default nextConfig;&#10;" />
              <option name="updatedContent" value="import type { NextConfig } from &quot;next&quot;;&#10;&#10;const nextConfig: NextConfig = {&#10;  /* config options here */&#10;};&#10;&#10;export default nextConfig;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/components/inventory/AdjustStockModal.tsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/components/inventory/AdjustStockModal.tsx" />
              <option name="updatedContent" value="&quot;use client&quot;;&#10;import React, { useState, FormEvent, ChangeEvent } from 'react';&#10;import { toast } from 'react-hot-toast';&#10;import { useAdjustStockMutation } from '@/store/slices/inventoryApi';&#10;import { ProductDTO } from '@/store/slices/productsApi';&#10;&#10;export type InventoryProduct = ProductDTO &amp; { _id: string };&#10;&#10;interface AdjustStockModalProps {&#10;  product: InventoryProduct;&#10;  onClose: () =&gt; void;&#10;  onAdjusted?: () =&gt; Promise&lt;void&gt; | void;&#10;}&#10;&#10;export default function AdjustStockModal({ product, onClose, onAdjusted }: AdjustStockModalProps) {&#10;  const [adjustStock, { isLoading }] = useAdjustStockMutation();&#10;  const [newStock, setNewStock] = useState&lt;number&gt;(product.stock);&#10;  const [reason, setReason] = useState&lt;string&gt;('');&#10;&#10;  const handleStockChange = (e: ChangeEvent&lt;HTMLInputElement&gt;) =&gt; setNewStock(Number(e.target.value));&#10;  const handleReasonChange = (e: ChangeEvent&lt;HTMLInputElement&gt;) =&gt; setReason(e.target.value);&#10;&#10;  const handleSubmit = async (e: FormEvent) =&gt; {&#10;    e.preventDefault();&#10;    try {&#10;      await adjustStock({ productId: product._id, newStock, reason }).unwrap();&#10;      toast.success('Stock actualizado');&#10;      if (onAdjusted) await onAdjusted();&#10;      onClose();&#10;    } catch (error) {&#10;      console.error(error);&#10;      toast.error('No se pudo actualizar el stock');&#10;    }&#10;  };&#10;&#10;  return (&#10;    &lt;div className=&quot;fixed inset-0 bg-slate-900 bg-opacity-50 flex items-center justify-center p-4 z-50&quot;&gt;&#10;      &lt;div className=&quot;bg-white rounded-xl shadow-2xl w-full max-w-md&quot;&gt;&#10;        &lt;form onSubmit={handleSubmit}&gt;&#10;          &lt;div className=&quot;p-6 border-b flex justify-between items-center&quot;&gt;&#10;            &lt;h2 className=&quot;text-2xl font-bold text-slate-800&quot;&gt;Ajustar Inventario&lt;/h2&gt;&#10;            &lt;button type=&quot;button&quot; onClick={onClose} className=&quot;text-slate-500 hover:text-slate-800 text-2xl&quot; aria-label=&quot;Cerrar&quot;&gt;&amp;times;&lt;/button&gt;&#10;          &lt;/div&gt;&#10;          &lt;div className=&quot;p-6 space-y-4&quot;&gt;&#10;            &lt;div&gt;&#10;              &lt;h3 className=&quot;text-lg font-semibold text-slate-800&quot;&gt;{product.name}&lt;/h3&gt;&#10;              &lt;p className=&quot;text-sm text-slate-500&quot;&gt;SKU: {product.sku}&lt;/p&gt;&#10;            &lt;/div&gt;&#10;            &lt;div&gt;&#10;              &lt;label htmlFor=&quot;inventory-new-stock&quot; className=&quot;block text-sm font-medium text-slate-700&quot;&gt;Nueva Cantidad en Stock&lt;/label&gt;&#10;              &lt;input type=&quot;number&quot; id=&quot;inventory-new-stock&quot; value={newStock} onChange={handleStockChange} required className=&quot;mt-1 block w-full&quot; /&gt;&#10;            &lt;/div&gt;&#10;            &lt;div&gt;&#10;              &lt;label htmlFor=&quot;inventory-reason&quot; className=&quot;block text-sm font-medium text-slate-700&quot;&gt;Razón del Ajuste (Opcional)&lt;/label&gt;&#10;              &lt;input type=&quot;text&quot; id=&quot;inventory-reason&quot; placeholder=&quot;Ej: Recepción de proveedor&quot; className=&quot;mt-1 block w-full&quot; value={reason} onChange={handleReasonChange} /&gt;&#10;            &lt;/div&gt;&#10;          &lt;/div&gt;&#10;          &lt;div className=&quot;bg-slate-50 p-6 rounded-b-xl flex justify-end space-x-4&quot;&gt;&#10;            &lt;button type=&quot;button&quot; onClick={onClose} className=&quot;bg-white border border-slate-300 text-slate-700 font-semibold px-6 py-3 rounded-lg hover:bg-slate-50&quot;&gt;Cancelar&lt;/button&gt;&#10;            &lt;button type=&quot;submit&quot; className=&quot;bg-sky-500 text-white font-semibold px-6 py-3 rounded-lg hover:bg-sky-600&quot; disabled={isLoading}&gt;Guardar Ajuste&lt;/button&gt;&#10;          &lt;/div&gt;&#10;        &lt;/form&gt;&#10;      &lt;/div&gt;&#10;    &lt;/div&gt;&#10;  );&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/components/inventory/InventoryRow.tsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/components/inventory/InventoryRow.tsx" />
              <option name="updatedContent" value="&quot;use client&quot;;&#10;import React from 'react';&#10;import InventoryStatusBadge from './InventoryStatusBadge';&#10;import { ProductDTO } from '@/store/slices/productsApi';&#10;&#10;export type InventoryProduct = ProductDTO &amp; { _id: string };&#10;&#10;interface RowProps {&#10;  product: InventoryProduct;&#10;  onAdjust: (p: InventoryProduct) =&gt; void;&#10;  onHistory: (p: InventoryProduct) =&gt; void;&#10;  disabledAdjust?: boolean;&#10;}&#10;&#10;export function InventoryRow({ product, onAdjust, onHistory, disabledAdjust }: RowProps) {&#10;  return (&#10;    &lt;tr key={product._id}&gt;&#10;      &lt;td className=&quot;p-4 font-medium text-slate-800&quot;&gt;{product.name}&lt;/td&gt;&#10;      &lt;td className=&quot;p-4 text-slate-500&quot;&gt;{product.sku}&lt;/td&gt;&#10;      &lt;td className=&quot;p-4 text-slate-500&quot;&gt;{product.stock}&lt;/td&gt;&#10;      &lt;td className=&quot;p-4 text-slate-500&quot;&gt;{product.lowStock}&lt;/td&gt;&#10;      &lt;td className=&quot;p-4&quot;&gt;&lt;InventoryStatusBadge stock={product.stock} lowStock={product.lowStock} /&gt;&lt;/td&gt;&#10;      &lt;td className=&quot;p-4&quot;&gt;&#10;        &lt;button onClick={() =&gt; onAdjust(product)} className=&quot;text-sky-600 hover:text-sky-800 font-medium mr-2&quot; disabled={disabledAdjust}&gt;Ajustar&lt;/button&gt;&#10;        &lt;button onClick={() =&gt; onHistory(product)} className=&quot;text-amber-600 hover:text-amber-800 font-medium&quot;&gt;Ver historial&lt;/button&gt;&#10;      &lt;/td&gt;&#10;    &lt;/tr&gt;&#10;  );&#10;}&#10;&#10;export default InventoryRow;&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/components/inventory/InventoryStatusBadge.tsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/components/inventory/InventoryStatusBadge.tsx" />
              <option name="updatedContent" value="&quot;use client&quot;;&#10;import React from 'react';&#10;&#10;interface Props {&#10;  stock: number;&#10;  lowStock: number;&#10;}&#10;&#10;export function InventoryStatusBadge({ stock, lowStock }: Props) {&#10;  if (stock &lt;= 0) {&#10;    return &lt;span className=&quot;px-2 py-1 text-xs font-semibold text-red-800 bg-red-100 rounded-full&quot;&gt;Sin Stock&lt;/span&gt;;&#10;  }&#10;  if (stock &lt;= lowStock) {&#10;    return &lt;span className=&quot;px-2 py-1 text-xs font-semibold text-yellow-800 bg-yellow-100 rounded-full&quot;&gt;Stock Bajo&lt;/span&gt;;&#10;  }&#10;  return &lt;span className=&quot;px-2 py-1 text-xs font-semibold text-green-800 bg-green-100 rounded-full&quot;&gt;En Stock&lt;/span&gt;;&#10;}&#10;&#10;export default InventoryStatusBadge;&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/components/inventory/InventoryTable.tsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/components/inventory/InventoryTable.tsx" />
              <option name="updatedContent" value="&quot;use client&quot;;&#10;import React from 'react';&#10;import { ProductDTO } from '@/store/slices/productsApi';&#10;import InventoryRow, { InventoryProduct } from './InventoryRow';&#10;&#10;interface TableProps {&#10;  products: ProductDTO[];&#10;  loading: boolean;&#10;  onAdjust: (p: InventoryProduct) =&gt; void;&#10;  onHistory: (p: InventoryProduct) =&gt; void;&#10;  disabledAdjust?: boolean;&#10;}&#10;&#10;export function InventoryTable({ products, loading, onAdjust, onHistory, disabledAdjust }: TableProps) {&#10;  const safeProducts: InventoryProduct[] = (products.filter((p): p is InventoryProduct =&gt; Boolean(p._id)) as InventoryProduct[]);&#10;  return (&#10;    &lt;div className=&quot;mt-6 bg-white rounded-lg shadow-sm overflow-x-auto&quot;&gt;&#10;      &lt;table className=&quot;w-full text-left&quot;&gt;&#10;        &lt;thead className=&quot;bg-slate-50 border-b border-slate-200&quot;&gt;&#10;          &lt;tr&gt;&#10;            &lt;th className=&quot;p-4 text-sm font-semibold text-slate-600&quot;&gt;Producto&lt;/th&gt;&#10;            &lt;th className=&quot;p-4 text-sm font-semibold text-slate-600&quot;&gt;SKU&lt;/th&gt;&#10;            &lt;th className=&quot;p-4 text-sm font-semibold text-slate-600&quot;&gt;Stock Actual&lt;/th&gt;&#10;            &lt;th className=&quot;p-4 text-sm font-semibold text-slate-600&quot;&gt;Nivel Bajo&lt;/th&gt;&#10;            &lt;th className=&quot;p-4 text-sm font-semibold text-slate-600&quot;&gt;Estado&lt;/th&gt;&#10;            &lt;th className=&quot;p-4 text-sm font-semibold text-slate-600&quot;&gt;Acciones&lt;/th&gt;&#10;          &lt;/tr&gt;&#10;        &lt;/thead&gt;&#10;        &lt;tbody className=&quot;divide-y divide-slate-200&quot;&gt;&#10;          {loading ? (&#10;            &lt;tr&gt;&lt;td colSpan={6} className=&quot;text-center p-8 text-slate-500&quot;&gt;Cargando...&lt;/td&gt;&lt;/tr&gt;&#10;          ) : safeProducts.map((p) =&gt; (&#10;            &lt;InventoryRow key={p._id} product={p} onAdjust={onAdjust} onHistory={onHistory} disabledAdjust={disabledAdjust} /&gt;&#10;          ))}&#10;        &lt;/tbody&gt;&#10;      &lt;/table&gt;&#10;    &lt;/div&gt;&#10;  );&#10;}&#10;&#10;export default InventoryTable;&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/components/inventory/StockHistoryModal.tsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/components/inventory/StockHistoryModal.tsx" />
              <option name="updatedContent" value="&quot;use client&quot;;&#10;import React, { useEffect } from 'react';&#10;import { toast } from 'react-hot-toast';&#10;import { useLazyGetHistoryQuery, AdjustmentEntry } from '@/store/slices/inventoryApi';&#10;import { ProductDTO } from '@/store/slices/productsApi';&#10;&#10;export type InventoryProduct = ProductDTO &amp; { _id: string };&#10;&#10;interface StockHistoryModalProps {&#10;  product: InventoryProduct;&#10;  onClose: () =&gt; void;&#10;}&#10;&#10;export default function StockHistoryModal({ product, onClose }: StockHistoryModalProps) {&#10;  const [triggerGetHistory, { data, isFetching, isError }] = useLazyGetHistoryQuery();&#10;&#10;  useEffect(() =&gt; {&#10;    (async () =&gt; {&#10;      try {&#10;        const res = await triggerGetHistory({ productId: product._id }).unwrap();&#10;        if ((res.history || []).length === 0) {&#10;          toast('Sin historial de ajustes', { icon: 'ℹ️' });&#10;        }&#10;      } catch (e) {&#10;        console.error(e);&#10;        toast.error('No se pudo cargar el historial');&#10;      }&#10;    })();&#10;  }, [product._id, triggerGetHistory]);&#10;&#10;  const history: AdjustmentEntry[] = data?.history || [];&#10;&#10;  return (&#10;    &lt;div className=&quot;fixed inset-0 bg-slate-900 bg-opacity-50 flex items-center justify-center p-4 z-50&quot;&gt;&#10;      &lt;div className=&quot;bg-white rounded-xl shadow-2xl w-full max-w-2xl&quot;&gt;&#10;        &lt;div className=&quot;p-6 border-b flex justify-between items-center&quot;&gt;&#10;          &lt;h2 className=&quot;text-2xl font-bold text-slate-800&quot;&gt;Historial de Ajustes&lt;/h2&gt;&#10;          &lt;button type=&quot;button&quot; onClick={onClose} className=&quot;text-slate-500 hover:text-slate-800 text-2xl&quot; aria-label=&quot;Cerrar&quot;&gt;&amp;times;&lt;/button&gt;&#10;        &lt;/div&gt;&#10;        &lt;div className=&quot;p-6 overflow-x-auto&quot;&gt;&#10;          &lt;h3 className=&quot;text-lg font-semibold text-slate-800 mb-2&quot;&gt;{product.name}&lt;/h3&gt;&#10;          &lt;table className=&quot;w-full text-left&quot;&gt;&#10;            &lt;thead className=&quot;bg-slate-50 border-b border-slate-200&quot;&gt;&#10;              &lt;tr&gt;&#10;                &lt;th className=&quot;p-2 text-sm font-semibold text-slate-600&quot;&gt;Fecha&lt;/th&gt;&#10;                &lt;th className=&quot;p-2 text-sm font-semibold text-slate-600&quot;&gt;Stock anterior&lt;/th&gt;&#10;                &lt;th className=&quot;p-2 text-sm font-semibold text-slate-600&quot;&gt;Stock nuevo&lt;/th&gt;&#10;                &lt;th className=&quot;p-2 text-sm font-semibold text-slate-600&quot;&gt;Razón&lt;/th&gt;&#10;              &lt;/tr&gt;&#10;            &lt;/thead&gt;&#10;            &lt;tbody className=&quot;divide-y divide-slate-200&quot;&gt;&#10;              {isFetching ? (&#10;                &lt;tr&gt;&lt;td colSpan={4} className=&quot;text-center p-4 text-slate-500&quot;&gt;Cargando...&lt;/td&gt;&lt;/tr&gt;&#10;              ) : isError ? (&#10;                &lt;tr&gt;&lt;td colSpan={4} className=&quot;text-center p-4 text-red-500&quot;&gt;Error al cargar.&lt;/td&gt;&lt;/tr&gt;&#10;              ) : history.length === 0 ? (&#10;                &lt;tr&gt;&lt;td colSpan={4} className=&quot;text-center p-4 text-slate-500&quot;&gt;Sin ajustes registrados.&lt;/td&gt;&lt;/tr&gt;&#10;              ) : history.map((h, idx) =&gt; (&#10;                &lt;tr key={idx}&gt;&#10;                  &lt;td className=&quot;p-2 text-slate-500&quot;&gt;{new Date(h.date).toLocaleString()}&lt;/td&gt;&#10;                  &lt;td className=&quot;p-2 text-slate-500&quot;&gt;{h.previousStock}&lt;/td&gt;&#10;                  &lt;td className=&quot;p-2 text-slate-500&quot;&gt;{h.newStock}&lt;/td&gt;&#10;                  &lt;td className=&quot;p-2 text-slate-500&quot;&gt;{h.reason || '-'}&lt;/td&gt;&#10;                &lt;/tr&gt;&#10;              ))}&#10;            &lt;/tbody&gt;&#10;          &lt;/table&gt;&#10;        &lt;/div&gt;&#10;        &lt;div className=&quot;bg-slate-50 p-6 rounded-b-xl flex justify-end&quot;&gt;&#10;          &lt;button type=&quot;button&quot; onClick={onClose} className=&quot;bg-white border border-slate-300 text-slate-700 font-semibold px-6 py-3 rounded-lg hover:bg-slate-50&quot;&gt;Cerrar&lt;/button&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;    &lt;/div&gt;&#10;  );&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>